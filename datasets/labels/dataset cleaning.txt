Title: Dataset Cleaning Script Documentation

1. Overview

This document describes the functionality and purpose of the main.py script used for cleaning and filtering a dataset of Nepali license plate images. The script processes raw images by removing blurry or small images, copies valid ones into a new folder, and generates placeholder label files for future annotation.

2. Folder Structure Assumptions

project_root/
├── raw_images/      # Original dataset with unfiltered images
├── cleaned/         # Destination folder for clean images
├── labels/          # Destination folder for label files (.txt)
├── main.py          # The cleaning script

3. Script Breakdown

3.1 Imports

import os
import cv2
import shutil
from pathlib import Path

os, shutil: For file and folder handling.

cv2: OpenCV for image processing.

Path: Ensures directories exist.

3.2 Folder Paths Setup

RAW_IMAGE_DIR = "raw_images"
CLEANED_DIR = "cleaned"
LABEL_DIR = "labels"

These variables define where the input images are and where to store the outputs.

3.3 Directory Creation

Path(CLEANED_DIR).mkdir(parents=True, exist_ok=True)
Path(LABEL_DIR).mkdir(parents=True, exist_ok=True)

Ensures that the output folders are created if they don't already exist.

3.4 Image Filters

Blurry Check

def is_blurry(image, threshold=100.0):
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    score = cv2.Laplacian(gray, cv2.CV_64F).var()
    return score < threshold

Converts image to grayscale

Calculates image sharpness using Laplacian variance

Filters out blurry images

Size Check

def is_too_small(image, min_width=100, min_height=40):
    h, w = image.shape[:2]
    return w < min_width or h < min_height

Removes images below defined dimensions

3.5 Main Cleaning Logic

def clean_dataset(max_images=600):
    ...

This function:

Iterates over each image in raw_images/

Skips non-image files

Applies blur and size filters

If valid, copies the image to cleaned/ and creates a .txt label with placeholder text "नं-plate"

Stops when it reaches 600 valid images

3.6 Logging and Completion Message

print("Cleaning process completed.")
print(f"Total images processed: {total}")
print(f"Number of valid images selected: {selected}")

Prints a summary of the cleaning operation.

4. Summary

The main.py script is a lightweight and efficient way to:

Remove poor-quality images (blurry or too small)

Organize clean images in a new folder

Generate label stubs for annotation

This script is helpful for building high-quality training data for OCR or license plate recognition tasks in Nepali script.

5. Future Enhancements

Integrate OCR to extract text automatically

Add image resizing or compression

Generate logs or CSV reports of filtered images

Split cleaned dataset into train/validation/test sets